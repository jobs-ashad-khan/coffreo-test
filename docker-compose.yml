version: '3.8'

services:
  php:
    container_name: coffreo_backend
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - ./backend:/var/www
    working_dir: /var/www
    networks:
      - app_network
    depends_on:
      - rabbitmq
      - mercure

  nginx:
    container_name: coffreo_server
    image: nginx:latest
    volumes:
      - ./backend:/var/www
      - ./docker/backend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    networks:
      - app_network
    depends_on:
      - php

  postgres:
    image: postgres:latest
    container_name: coffreo_db
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app_network

  rabbitmq:
    container_name: coffreo_rabbitmq
    image: rabbitmq:4.0-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app_network

  frontend:
    container_name: coffreo_frontend
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    networks:
      - app_network
    depends_on:
      - php
      - mercure

  mercure:
    container_name: coffreo_mercure
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      SERVER_NAME: ":1337"
      MERCURE_JWT_SECRET: ${MERCURE_JWT_SECRET}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY}
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://localhost:3000 http://localhost:8000
        anonymous 1
    ports:
      - "1337:1337"
    volumes:
      - mercure_data:/data
      - mercure_config:/config
    networks:
      - app_network

volumes:
  postgres_data:
    driver: local
  mercure_data:
  mercure_config:

networks:
  app_network:
    driver: bridge
